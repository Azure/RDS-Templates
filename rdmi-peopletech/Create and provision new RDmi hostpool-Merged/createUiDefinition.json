{
	"$schema": "https://schema.management.azure.com/schemas/0.1.2-preview/CreateUIDefinition.MultiVm.json#",
	"handler": "Microsoft.Compute.MultiVm",
	"version": "0.1.2-preview",
	"parameters": {
		"basics": [
			{
				"name": "hostsRegistration",
				"type": "Microsoft.Common.OptionsGroup",
				"label": "Hosts Registration",				
				"defaultValue": "Standard",
				"constraints": {
					"allowedValues": [
						{
							"label": "Standard",
							"value": "Standard"
						},
						{
							"label": "ExistingToken",
							"value": "ExistingToken"
						}
					]
				},
				"visible": true
			},
			{
				"name": "hostpoolName",
				"type": "Microsoft.Common.TextBox",
				"label": "Hostpool name",
				"constraints": {
					"required": true
				},
				"visible":  "[equals(basics('hostsRegistration'), 'Standard')]"
			},
			{
				"name": "mrsRegion",
				"type": "Microsoft.Common.TextBox",
				"label": "Broker URL",
				"toolTip": "Select your home region for MRS. This is the Azure region where user connection data, session host data, and diagnostic data will reside.",
				"constraints": {
					"required": true
				},
				"visible":  "[equals(basics('hostsRegistration'), 'Standard')]"
			},
			{
				"name": "tenantName",
				"type": "Microsoft.Common.TextBox",
				"label": "Tenant Name",
				"toolTip": "Enter the name of your RDS Tenant.",
				"constraints": {
					"required": true
				},
				"visible":  "[equals(basics('hostsRegistration'), 'Standard')]"
			},
			{
				"name": "tenantAdminUPN",
				"type": "Microsoft.Common.TextBox",
				"label": "Tenant Admin UPN",
				"toolTip": "Enter the UPN (admin1@contoso.com) of an admin who has permission to create the host pool",
				"constraints": {
					"required": true
				},
				"visible":  "[equals(basics('hostsRegistration'), 'Standard')]"
			},
			{
				"name": "tenantAdminPassword",
				"type": "Microsoft.Common.PasswordBox",
				"label": {
					"password": "Tenant Admin Password",
					"confirmPassword": "Confirm password"
				},
				"constraints": {
					"required": true
				},
				"toolTip": "Password for the domain user",
				"options": {
					"hideConfirmation": false
				},
				"visible":  "[equals(basics('hostsRegistration'), 'Standard')]"
			},
			{
				"name": "registrationToken",
				"type": "Microsoft.Common.TextBox",
				"label": "Registration Token",
				"toolTip": "Enter the valid registration token",
				"constraints": {
					"required": true
				},
				"visible":  "[equals(basics('hostsRegistration'), 'ExistingToken')]"
			}
		],
	
	"steps": [
		{
			"name": "configureVirtualMachines",
			"label": "Configure virtual machines",
			"subLabel": {
				"preValidation": "Usage profile and VM count",
				"postValidation": "Done"
			},
			"bladeTitle": "Configure number of VMs based on profile usage",
			"bladeSubtitle": "Select a usage profile and number of users to determine the recommended number of VMs",
			"elements": [
				{
					"name": "usageProfile",
					"type": "Microsoft.Common.OptionsGroup",
					"label": "Usage Profile",
					"defaultValue": "Medium",
					"toolTip": "The usage profile will select a recommended user per vCPU: Light (7), Medium (5), or Heavy (3)",
					"constraints": {
						"allowedValues": [
							{
								"label": "Light",
								"value": "7"
							},
							{
								"label": "Medium",
								"value": "5"
							},
							{
								"label": "Heavy",
								"value": "3"
							}
						]
					},
					"visible": true
				},
				{
					"name": "totalUsers",
					"type": "Microsoft.Common.TextBox",
					"label": "Total users",
					"defaultValue": "100",
					"constraints": {
						"required": true,
						"regex": "^[1-9][0-9]*$",
						"validationMessage": "Only positive values are allowed."
					},
					"visible": true
				},
				{
					"name": "virtualMachineSize",
					"type": "Microsoft.Compute.SizeSelector",
					"label": "Virtual machine size",
					"osPlatform": "Windows",
					"constraints": {
						"excludedSizes": [
							"Basic_A0",
							"Basic_A1",
							"Basic_A2",
							"Basic_A3",
							"Basic_A4",
							"Standard_A0",
							"Standard_A1",
							"Standard_A3",
							"Standard_A4",
							"Standard_A5",
							"Standard_A6",
							"Standard_A7",
							"Standard_A8",
							"Standard_A9",
							"Standard_A10",
							"Standard_A11",
							"Standard_D1",
							"Standard_D1_v2",
							"Standard_DS1",
							"Standard_DS1_v2",
							"Standard_D2",
							"Standard_D2_v2",
							"Standard_D2_v2_Promo",
							"Standard_DS2",
							"Standard_DS2_v2",
							"Standard_D3",
							"Standard_D3_v2",
							"Standard_D3_v2_Promo",
							"Standard_DS3",
							"Standard_DS3_v2",
							"Standard_D4",
							"Standard_D4_v2",
							"Standard_D4_v2_Promo",
							"Standard_DS4",
							"Standard_DS4_v2",
							"Standard_D5_v2",
							"Standard_D5_v2_Promo",
							"Standard_D11",
							"Standard_D11_v2",
							"Standard_DS11",
							"Standard_DS11-1_v2",
							"Standard_DS11_v2",
							"Standard_DS11_v2_Promo",
							"Standard_D12",
							"Standard_D12_v2",
							"Standard_DS12",
							"Standard_DS12_v2",
							"Standard_DS12-1_v2",
							"Standard_DS12-2_v2",
							"Standard_DS12_v2_Promo",
							"Standard_D13",
							"Standard_D13_v2",
							"Standard_DS13",
							"Standard_DS13-2_v2",
							"Standard_DS13-4_v2",
							"Standard_DS13_v2",
							"Standard_DS13_v2_Promo",
							"Standard_D14",
							"Standard_D14_v2",
							"Standard_DS14",
							"Standard_DS14-4_v2",
							"Standard_DS14-8_v2",
							"Standard_DS14_v2",
							"Standard_DS14_v2_Promo",
							"Standard_D15_v2"
						]
					},
					"recommendedSizes": [
						"Standard_D8s_v3",
						"Standard_D8_v3",
						"Standard_B8ms"
					],
					"visible": true,
					"count": "[ div (sub (add( mul(int(replace(substring(steps('configureVirtualMachines').virtualMachineSize,10,2),'s',' ')), steps('configureVirtualMachines').usageProfile), int(steps('configureVirtualMachines').totalUsers)),1),   mul(int(replace(substring(steps('configureVirtualMachines').virtualMachineSize, 10, 2), 's', ' ')), steps('configureVirtualMachines').usageProfile) )]"
				}
			]
		},
		{
			"name": "virtualMachineSettings",
			"label": "Virtual machine settings",
			"subLabel": {
				"preValidation": "Select VM configuration settings",
				"postValidation": "Done"
			},
			"bladeTitle": "Configure the VMs for Azure",
			"bladeSubtitle": "VM configuration",
			"elements": [
				{
					"name": "vmImageType",
					"type": "Microsoft.Common.OptionsGroup",
					"label": "Image",
					"defaultValue": "Custom",
					"constraints": {
						"allowedValues": [
							{
								"label": "Custom",
								"value": "Custom"
							}
						]
					},
					"visible": true
				},
				{
					"name": "galleryImageSelection",
					"type": "Microsoft.Common.DropDown",
					"label": "",
					"defaultValue": "Project Eindhoven Windows 10 SKU",
					"constraints": {
						"allowedValues": [
							{
								"label": "Project Eindhoven Windows 10 SKU",
								"value": "Eindhoven-Windows10"
							},
							{
								"label": "Windows Server 2016 Datacenter",
								"value": "2016-Datacenter"
							},
							{
								"label": "Windows Server 2012 R2 Datacenter",
								"value": "2012-R2-Datacenter"
							}
						]
					},
					"visible": "[equals(steps('virtualMachineSettings').vmImageType, 'Gallery')]"
				},
				{
					"name": "imageURI",
					"type": "Microsoft.Common.TextBox",
					"label": "imageURI",
					"toolTip": "Enter the URL for the .vhd image from your storage account, such as https://mystorageaccount.blob.core.windows.net/vhds/mycustomimage.vhd",
					"constraints": {
						"required": true,
						"validationMessage": "Please enter a valid URL for .vhd file from your storage account."
					},
					"visible": "[equals(steps('virtualMachineSettings').vmImageType, 'Custom')]"
				},
				{
					"name": "domainUser",
					"type": "Microsoft.Common.TextBox",
					"label": "Domain UPN",
					"toolTip": "Active Directory admin UPN that will be used to join the virtual machines to your domain. For example, vmjoiner@contoso.com",
					"visible": true,
					"constraints": {
						"required": true
					}
				},
				{
					"name": "password",
					"type": "Microsoft.Compute.CredentialsCombo",
					"label": {
						"password": "Admin Password",
						"confirmPassword": "Confirm password"
					},
					"osPlatform": "Windows",
					"toolTip": {
						"password": "Password for the domain user"
					},
					"constraints": {
						"required": true
					},
					"options": {
						"hideConfirmation": false
					},
					"visible": true
				},
				{
					"name": "imageStorageAccount",
					"type": "Microsoft.Storage.StorageAccountSelector",
					"label": "Image storage account",
					"toolTip": "This is the storage account that will be used to store the session host vhds. A container named 'vhds' will be created in blob storage in this storage account, if it does not already exist.",
					"defaultValue": {
						"name": "storageaccount01",
						"type": "Standard_LRS"
					},
					"options": {
						"hideExisting": false
					},
					"visible": "true"
				},
				{
					"name": "hostpoolVnet",
					"type": "Microsoft.Network.VirtualNetworkCombo",
					"label": {
						"virtualNetwork": "Virtual network",
						"subnets": "Subnets"
					},
					"toolTip": {
						"virtualNetwork": "",
						"subnets": ""
					},
					"defaultValue": {
						"name": "vnet-01",
						"addressPrefixSize": "/24"
					},
					"constraints": {
						"minAddressPrefixSize": "/30"
					},
					"options": {
						"hideExisting": false
					},
					"subnets": {
						"subnet1": {
							"label": "vmSubnet",
							"defaultValue": {
								"name": "vmSubnet",
								"addressPrefixSize": "/26"
							},
							"constraints": {
								"minAddressPrefixSize": "/30",
								"minAddressCount": "[ div (sub (add( mul(int(replace(substring(steps('configureVirtualMachines').virtualMachineSize,10,2),'s',' ')), steps('configureVirtualMachines').usageProfile), int(steps('configureVirtualMachines').totalUsers)),1),   mul(int(replace(substring(steps('configureVirtualMachines').virtualMachineSize, 10, 2), 's', ' ')), steps('configureVirtualMachines').usageProfile) )]",
								"requireContiguousAddresses": false
							}
						}
					},
					"visible": true
				}
			]
		}
	],
	"outputs": {
		"storageAccountName": "[steps('virtualMachineSettings').imageStorageAccount.name]",
		"storageAccountResourceGroupName": "[steps('virtualMachineSettings').imageStorageAccount.resourceGroup]",
		"VmImageVhdUri": "[steps('virtualMachineSettings').imageURI]",
		"rdshNumberOfInstances": "[ div (sub (add( mul(int(replace(substring(steps('configureVirtualMachines').virtualMachineSize,10,2),'s',' ')), steps('configureVirtualMachines').usageProfile), int(steps('configureVirtualMachines').totalUsers)),1),   mul(int(replace(substring(steps('configureVirtualMachines').virtualMachineSize, 10, 2), 's', ' ')), steps('configureVirtualMachines').usageProfile) )]",
		"rdshVmSize": "[steps('configureVirtualMachines').virtualMachineSize]",
		"existingDomainUPN": "[steps('virtualMachineSettings').domainUser]",
		"existingDomainPassword": "[steps('virtualMachineSettings').password.password]",
		"virtualNetworkResourceGroupName": "[steps('virtualMachineSettings').hostpoolVnet.resourceGroup]",
		"existingVnetName": "[steps('virtualMachineSettings').hostpoolVnet.name]",
		"existingSubnetName": "[steps('virtualMachineSettings').hostpoolVnet.subnets.subnet1.name]",
		"RDBrokerURL": "[basics('mrsRegion')]",
		"HostPoolName": "[basics('hostpoolName')]",
		"ExistingTenantName": "[basics('tenantName')]",
		"TenantAdminUPN": "[basics('tenantAdminUPN')]",
		"TenantAdminPassword": "[basics('tenantAdminPassword')]",
		"RegistrationToken": "[basics('registrationToken')]"
	}
}
}