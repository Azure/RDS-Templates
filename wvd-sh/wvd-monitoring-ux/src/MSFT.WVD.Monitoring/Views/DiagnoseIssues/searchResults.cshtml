@model DiagonizePageViewModel
@using MSFT.WVD.Monitoring.Common.Models
@{
    ViewData["Title"] = "Diagnose Issues";

}

<div class="width-100 content-section">
    <h2>Activity feed</h2>
    <br />
    <form asp-controller="DiagnoseIssues" method="post" id="myform" asp-route-returnUrl="@Context.Request.Path" role="form">
        <div class="ms-Grid" dir="ltr">
            <div class="ms-Grid-row">
                <div class="form-wrap ms-Grid-col ms-xxxl3 ms-xxl3 ms-xl12 m-b-20">
                    <label asp-for="DiagonizeQuery.UPN" class="control-label ms-xxxl2 ms-xxl2 ms-xl2">User UPN<span class="red">*</span></label>
                    <div class="input-wrap ms-xxxl10 ms-xxl12 ms-xl12">
                        <input asp-for="@Model.DiagonizeQuery.UPN" class="form-control" id="upn" value="@Model.DiagonizeQuery.UPN" disabled />
                        <span asp-validation-for="DiagonizeQuery.UPN" id="validateUpn" class="error-msg validate"></span>
                    </div>
                </div>
                <div class="form-wrap ms-Grid-col ms-xxxl3 ms-xxl3 ms-xl12 m-b-20">
                    <label asp-for="DiagonizeQuery.ActivityType" class="control-label ms-xxxl2 ms-xxl2 ms-xl2"></label>
                    <div class="input-wrap ms-xxxl10 ms-xxl12 ms-xl12">
                        <select size="1" asp-for="DiagonizeQuery.ActivityType" asp-items="Html.GetEnumSelectList<ActivityType>().Where(x => x.Text != ActivityType.None.ToString()).ToList()" class="form-control  width-100 " id="activityType" disabled></select>
                    </div>
                </div>
                <div class="form-wrap ms-Grid-col ms-xxxl3 ms-xxl4 ms-xl12 p-l-r-15 m-b-20">
                    <button type="submit" class="ms-Button primary-btn" id="process" asp-action="returnToIndex">
                        <span class="ms-Button-label">New Search</span>
                    </button>
                </div>
            </div>
        </div>

    </form>

    <hr />
    <div class="export-btn">
        <button class="ms-Button ms-Button--default float-left" onclick="download_csv()">
            <span class="ms-Button-label flex-row-center"><i class="ms-Icon ms-Icon--Export" aria-hidden="true"></i>Export</span>
        </button>
    </div>

    <div class="ContextualMenuWrap">
        <div class="ms-ContextualMenuExample filter-btn float-right">
            <button class="ms-Button ms-Button--default">
                <span class="ms-Button-label"><i class="ms-Icon ms-Icon--Filter" aria-hidden="true"></i>Filter</span>
            </button>
            <ul class="ms-ContextualMenu is-hidden ms-ContextualMenu--multiselect">
                <li class="ms-ContextualMenu-item ms-ContextualMenu-item--header">clear all filters</li>
                <li class="ms-ContextualMenu-item ms-ContextualMenu-item--divider"></li>
                <li class="ms-ContextualMenu-item ms-ContextualMenu-item--header">Issues from</li>
                <li class="ms-ContextualMenu-item">
                    @{
                        IDictionary<string, string> routeData = new Dictionary<string, string>();
                        routeData.Add("interval", "Lastonehour");
                        routeData.Add("upn", Model.DiagonizeQuery.UPN);
                    }
                    <a class="ms-ContextualMenu-link" tabindex="1" asp-controller="DiagnoseIssues" asp-action="IssuesInterval" asp-all-route-data="routeData">Last hour</a>
                </li>
                <li class="ms-ContextualMenu-item">
                    @{
                        IDictionary<string, string> routeData1 = new Dictionary<string, string>();
                        routeData1.Add("interval", "Lastonehour");
                        routeData1.Add("upn", Model.DiagonizeQuery.UPN);
                    }
                    <a class="ms-ContextualMenu-link" tabindex="1" asp-controller="DiagnoseIssues" asp-action="IssuesInterval" asp-all-route-data="routeData1">6 hours ago</a>
                </li>
                <li class="ms-ContextualMenu-item">
                    @{
                        IDictionary<string, string> routeData2 = new Dictionary<string, string>();
                        routeData2.Add("interval", "onedayago");
                        routeData2.Add("upn", Model.DiagonizeQuery.UPN);
                    }
                    <a class="ms-ContextualMenu-link" tabindex="1" asp-controller="DiagnoseIssues" asp-action="IssuesInterval" asp-all-route-data="routeData2">1 day ago</a>
                </li>
                <li class="ms-ContextualMenu-item">
                    @{
                        IDictionary<string, string> routeData3 = new Dictionary<string, string>();
                        routeData3.Add("interval", "onweekago");
                        routeData3.Add("upn", Model.DiagonizeQuery.UPN);
                    }
                    <a class="ms-ContextualMenu-link" tabindex="1" asp-controller="DiagnoseIssues" asp-action="IssuesInterval" asp-all-route-data="routeData3">1 week ago</a>
                </li>
                <li class="ms-ContextualMenu-item ms-ContextualMenu-item--divider"></li>
                <li class="ms-ContextualMenu-item ms-ContextualMenu-item--header">Outcome</li>
                <li class="ms-ContextualMenu-item">
                    @{
                        IDictionary<string, string> routeData4 = new Dictionary<string, string>();
                        routeData4.Add("outcome", "Failure");
                        routeData4.Add("upn", Model.DiagonizeQuery.UPN);
                    }
                    <a class="ms-ContextualMenu-link" tabindex="1" asp-controller="DiagnoseIssues" asp-action="IssuesInterval" asp-all-route-data="routeData4">Failed</a>
                </li>
                <li class="ms-ContextualMenu-item">
                    @{
                        IDictionary<string, string> routeData5 = new Dictionary<string, string>();
                        routeData5.Add("outcome", "Success");
                        routeData5.Add("upn", Model.DiagonizeQuery.UPN);
                    }
                    <a class="ms-ContextualMenu-link" tabindex="1" asp-controller="DiagnoseIssues" asp-action="IssuesInterval" asp-all-route-data="routeData5">Success</a>
                </li>
            </ul>
        </div>
        <div class="clear"></div>
    </div>
    @if (Model.ConnectionActivity == null || Model.ManagementActivity == null || Model.FeedActivity == null || Model.ConnectionActivity.Count == 0 || Model.ManagementActivity.Count == 0 || Model.FeedActivity.Count == 0)
    {

        <div id="loader1" class="loader"></div>
    }
    <span class="countitems">@Model.ConnectionActivity.Count items</span>
    <div class="activitytable" id="table">

        <table class="ms-Table" id="activityTabledata">
            <thead>
                <tr>
                    <th></th>
                    <th></th>
                    <th asp-for="Start Time">Start Time</th>
                    <th asp-for="End Time">End Time</th>
                    <th asp-for="Outcome">Outcome</th>

                    <th asp-for="ErrorType">Error Type</th>
                    <th asp-for="Error">Error Code</th>
                    <th asp-for="Error" style="display: none;"></th>
                    <th asp-for="Error" style="display: none;"></th>
                    <th asp-for="Error" style="display: none;"></th>
                    <th asp-for="Session Host">Session Host</th>
                    <th asp-for="Client">Client</th>
                    <th asp-for="Client Ip">Client Ip</th>
                    <th asp-for="HostPoolname">HostPoolname</th>
                    <th asp-for="Tenant">Tenant</th>
                </tr>
            </thead>

            <tbody>

                @if (Model.ActivityType == MSFT.WVD.Monitoring.Common.Models.ActivityType.Connection && Model.ConnectionActivity != null)
                {
                    var index = 0;
                    @foreach (var d in Model.ConnectionActivity)
                    {
                        index = index + 1;

                        if (d.errors != null && d.errors.Count > 0)
                        {
                            var count = 0;
                            @foreach (var err in d.errors)
                            {
                                count = count + 1;
                                if (count == 1)
                                {
                <tr >
                    <td>
                            
                    </td>
                   

                    <td><button class="chevron-btn" id="btnRowHide-@index" type="button" onclick="{rowClick(@index)}"><span><i class="ms-Icon ms-Icon--ChevronDown" aria-hidden="true"></i></span></button></td>

                    <td>@d.startTime</td>
                    <td>@d.endTime</td>
                    <td>@d.outcome</td>
                    <td>@err["errorInternal"]</td>
                    <td>@err["errorCodeSymbolic"]</td>
                    <td style="display: none;">@err["errorCode"]</td>
                    <td style="display: none;">@err["errorMessage"]</td>
                    <td style="display: none;">@err["time"]</td>
                    <td>
                        <a asp-controller="DiagnoseIssues"
                           asp-action="ActivityHostDetails"
                           asp-route-id="@d.activityId" class="ms-ContextualMenu-item">@d.SessionHostName</a>
                    </td>
                    <td>@d.ClientOS</td>
                    <td><a href="" class="not-active">@d.ClientIPAddress</a></td>
                    <td>@d.SessionHostPoolName</td>
                    <td>@d.Tenants</td>

                </tr>
                                }
                                else
                                {
                                    <tr class="trData-@index" style="visibility:visible;">
                                        <td>
                                            @*<div class="ms-PanelExample" id="closepanel">

                                                <div class="flyoutpanel ms-Panel" id="errordetailspanel" style="visibility:visible;">
                                                    <div class="flyoutpanel-content-wrap">


                                                        <div class="flyoutpanel-header header-col">

                                                            <div class="header-btns">
                                                                <form>
                                                                    <button type="submit"><span><i class="ms-Icon ms-Icon--Back" aria-hidden="true"></i></span></button>
                                                                    <button type="button" class="close" href="" id="btnSlideClose"><i class="fa fa-times"></i></button>
                                                                </form>

                                                            </div>
                                                            <h4>Error details</h4>
                                                        </div>
                                                        <div class="flyoutpanel-content">
                                                            <p>vbvcbvn57568</p>
                                                            <div class="flyoutpanel-controls">
                                                                <label class="control-label">Error Code:</label>
                                                                <span>@err["errorCode"]</span>
                                                                <label class="control-label">Internal:</label>
                                                                <span>@err["errorInternal"]</span>
                                                                <label class="control-label">Message:</label>
                                                                <span>@err["errorMessage"]</span>
                                                                <label class="control-label">Time:</label>
                                                                <span>@err["time"]</span>
                                                            </div>
                                                        </div>

                                                    </div>
                                                </div>
                                            </div>*@
                                        </td>

                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td>@err["errorInternal"]</td>
                                        <td>@err["errorCodeSymbolic"]</td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                    </tr>

                                }

                            }

                        }
                        else
                        {
                            <tr>

                                <td></td>
                                <td>@d.startTime</td>
                                <td>@d.endTime</td>
                                <td>@d.outcome</td>
                                <td></td>
                                <td></td>
                                <td>
                                    <a asp-controller="DiagnoseIssues"
                                       asp-action="ActivityHostDetails"
                                       asp-route-id="@d.activityId" class="ms-ContextualMenu-item">@d.SessionHostName</a>
                                </td>
                                <td>@d.ClientOS</td>
                                <td><a href="" class="not-active">@d.ClientIPAddress</a></td>
                                <td>@d.SessionHostPoolName</td>
                                <td>@d.Tenants</td>
                            </tr>
                        }


                    }
                }

                else if (Model.ActivityType == MSFT.WVD.Monitoring.Common.Models.ActivityType.Management)
                {
                    @foreach (var d in Model.ManagementActivity)
                    {
                        <tr>
                            <td>@d.activityId</td>
                            <td>@d.activityType</td>
                            <td>@d.outcome</td>
                            <td>
                                @(d.isInternalError != null && d.isInternalError.ToString() == "true" ? "Yes" : "No")
                            </td>
                            <td>@d.errorMessage</td>
                            <td>@d.Tenants</td>
                            <td>@d.userName</td>
                            <td>@d.startTime</td>
                            <td>@d.endTime</td>
                            <td>@d.ObjectsCreated</td>
                            <td>@d.ObjectsDeleted</td>
                            <td>@d.ObjectsFetched</td>

                            <td>@d.ObjectsUpdated</td>
                        </tr>
                    }
                }
                else if (Model.ActivityType == MSFT.WVD.Monitoring.Common.Models.ActivityType.Feed)
                {
                    @foreach (var d in Model.FeedActivity)
                    {
                        <tr>
                            <td>@d.activityId </td>
                            <td>@d.activityType </td>
                            <td>@d.startTime </td>
                            <td>@d.endTime </td>
                            <td>@d.userName</td>
                            <td>@d.outcome </td>
                            <td> @(d.isInternalError != null && d.isInternalError.ToString() == "true" ? "Yes" : "No")</td>
                            <td>@d.errorMessage </td>
                            <td><a href="" class="not-active">@d.ClientIPAddress </a></td>
                            <td>@d.ClientOS </td>
                        </tr>
                    }
                }
                else if (Model.ActivityType == MSFT.WVD.Monitoring.Common.Models.ActivityType.None)
                {
                    <tr>
                        <td colspan="14">
                            <div class="norecordstable">
                                <h3 class="text-center">No records found for the search criteria</h3>
                            </div>
                        </td>

                    </tr>

                }
            </tbody>

        </table>


    </div>

    <div class="ms-PanelExample" id="closepanel">
        <div class="flyoutpanel ms-Panel" id="errordetailspanel" style="visibility:visible;" is-open>
            <div class="flyoutpanel-content-wrap">


                <div class="flyoutpanel-header header-col">

                    <div class="header-btns">
                        <form>
                            <button type="submit"><span><i class="ms-Icon ms-Icon--Back" aria-hidden="true"></i></span></button>
                            @*<button type="button" class="close" href="" id="btnSlideClose"><i class="fa fa-times"></i></button>*@
                        </form>

                    </div>
                    <h4>Error details</h4>
                </div>
                <div class="flyoutpanel-content">
                    <div class="flyoutpanel-controls">
                        <label class="control-label">Error Code:</label>
                        <input type="text" class="form-control" id="errorcode" style="border: none;box-shadow: none;" />
                        <label class="control-label">Internal:</label>
                        <input type="text" class="form-control" id="Internal" style="border: none;box-shadow: none;" />
                        <label class="control-label">Message:</label>
                        <textarea rows="14" cols="10" wrap="soft" class="form-control" id="Message" style="border: none;box-shadow: none;resize:none"></textarea>
                        <label class="control-label">Time:</label>
                        <input type="text" class="form-control" id="Time" style="border: none;box-shadow: none;" />
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<script>
    (function () {
        document.getElementById("Diagnosebreadcrumb").style.display = "block";
        var TableElements = document.querySelectorAll(".ms-Table");
        for (var i = 0; i < TableElements.length; i++) {
            new fabric['Table'](TableElements[i]);
        }
        document.getElementById("upn")
            .addEventListener("change", function () {
                document.getElementById("validateUpn").style.display = "none";
            }, false);
        document.getElementById("upn")
            .addEventListener("keyup", function () {
                document.getElementById("validateUpn").style.display = "none";
            }, false);
        document.getElementById("loader1").hidden = true;
        document.getElementById("process").addEventListener("click", function () {
            document.getElementById("loader1").hidden = true;
        }, false);
    })();
</script>
<script type="text/javascript">
    var ContextualMenuElements = document.querySelectorAll(".ms-ContextualMenuExample");
    console.log(ContextualMenuElements);
    for (var i = 0; i < ContextualMenuElements.length; i++) {
        var ButtonElement = ContextualMenuElements[i].querySelector(".ms-Button");
        var ContextualMenuElement = ContextualMenuElements[i].querySelector(".ms-ContextualMenu");
        new fabric['ContextualMenu'](ContextualMenuElement, ButtonElement);
    }


  
    function rowClick(index) {
        console.log(index);
        var lst = document.getElementsByClassName("trData-" + index);
        console.log(lst, "lst");
        for (var i = 0; i < lst.length; ++i) {
            console.log(lst[i].style.visibility, "lst[i].style.visibility");
            var value = lst[i].style.visibility;
            if (value == "visible") {
                lst[i].style.visibility = "hidden";
                lst[i].style.display = "none";
            }
            else {
                lst[i].style.visibility = "visible";
                lst[i].style.display = "table-row";
            }
        }
    }
    function download_csv() {
        var jsonData = [];
        var jsonHeaderData = '';
        var myTab = document.getElementById('activityTabledata');
        for (var j = 1; j < myTab.rows[0].cells.length; j++) {
            var objheaers = myTab.rows[0].cells[j].innerText;
            if (j == 1) {
                jsonHeaderData = objheaers;
            }
            else {
                jsonHeaderData = jsonHeaderData + "," + objheaers;
            }
        }
        for (i = 1; i < myTab.rows.length; i++) {
            var jsonRowData = [];
            for (var j = 1; j < myTab.rows[i].cells.length; j++) {
                var objCells = myTab.rows[i].cells[j].innerText;

                jsonRowData.push(objCells);
            }
            jsonData.push(jsonRowData);
        }
        var csv = jsonHeaderData + '\n';
        jsonData.forEach(function (row) {
            csv += row.join(',');
            csv += "\n";
        });
        console.log(csv);
        var hiddenElement = document.createElement('a');
        hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);
        hiddenElement.target = '_blank';
        hiddenElement.download = 'people.csv';
        hiddenElement.click();
    }
    var btnSlideClose = document.getElementsByClassName("close");
    btnSlideClose.addEventListener("click", function () {
        document.getElementById("errordetailspanel").style.visibility = "hidden";
    });
</script>
<script>
    const copytoclipboard = document.querySelectorAll('table tr');
    copytoclipboard.forEach(color => {
        color.addEventListener('click', () => {
            const selection = window.getSelection();
            const range = document.createRange();
            range.selectNodeContents(color);
            selection.removeAllRanges();
            selection.addRange(range);

            try {
                document.execCommand('copy');
                selection.removeAllRanges();

                const original = color.textContent;

                setTimeout(() => {
                }, 1200);
            } catch (e) {
                const errorMsg = document.querySelector('.error-msg');
                errorMsg.classList.add('show');

                setTimeout(() => {
                    errorMsg.classList.remove('show');
                }, 1200);
            }
        });
    });
</script>
<script>
    var table = document.getElementById('activityTabledata');
    console.log(document.getElementById('activityTabledata'), "table")

    for ( var i = 0; i < activityTabledata.rows.length; i++)
    {
        console.log(activityTabledata.rows.length, "table22")
        activityTabledata.rows[i].onclick = function () {
        var value = document.getElementById("errordetailspanel").style.display;
        document.getElementById("errordetailspanel").style.display = "block";
        document.getElementById("errordetailspanel").style.visibility = "visible";
            document.getElementById('errorcode').value = this.cells[6].innerText;
            document.getElementById('Internal').value = this.cells[5].innerText;
            document.getElementById('Message').value = this.cells[8].innerText;
            document.getElementById('Time').value = this.cells[9].innerText;
        }
    }
</script>
